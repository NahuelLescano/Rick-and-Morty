{"ast":null,"code":"var _jsxFileName = \"/home/nahuel/Documentos/Repos/Henry/rick_and_morty/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Routes, Route, useLocation, useNavigate } from 'react-router-dom';\nimport Cards from './components/Cards/Cards.jsx';\nimport NavBar from './components/NavBar/NavBar.jsx';\nimport About from './components/About/About.jsx';\nimport Detail from './components/Detail/Detail.jsx';\nimport Form from './components/Form/Form.jsx';\nimport Favorites from './components/Favorites/Favorites.jsx';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [access, setAccess] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const URL = 'https://rickandmortyapi.com/api/character/';\n  const username = 'nahuel@gmail.com';\n  const password = 'nahuel1234';\n  const login = userData => {\n    if (userData.username === username && userData.password === password) {\n      setAccess(true);\n      navigate('/home');\n    }\n  };\n  const logout = () => {\n    setAccess(false);\n    navigate('/');\n  };\n\n  // Prohibit the access if the user doesn't provide\n  // an username and password\n  useEffect(() => {\n    !access && navigate('/');\n    // eslint-disable-next-line\n  }, [access]);\n  const onSearch = id => {\n    fetch(`${URL}${id}`).then(response => response.json()).then(data => {\n      if (characters.some(character => character.id === data.id)) alert('This character has already been added.');else if (data.name) setCharacters([data, ...characters]);else alert('There are not characters with this id.');\n    });\n  };\n  const onClose = id => {\n    setCharacters(characters.filter(character => character.id !== id));\n  };\n  const randomCharacter = () => {\n    const randomId = Math.floor(Math.random() * 826 + 1);\n    console.log(`Random character number: ${randomId}`);\n    fetch(`${URL}${randomId}`).then(response => response.json()).then(data => {\n      if (data.name) setCharacters([data, ...characters]);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [location.pathname !== '/' && /*#__PURE__*/_jsxDEV(NavBar, {\n      onSearch: onSearch,\n      logout: logout,\n      randomCharacter: randomCharacter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Form, {\n          login: login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Cards, {\n          characters: characters,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/favorites\",\n        element: /*#__PURE__*/_jsxDEV(Favorites, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/detail/:detailId\",\n        element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GOeRqiZPW0JgElowzO17Fl6bRD4=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Routes","Route","useLocation","useNavigate","Cards","NavBar","About","Detail","Form","Favorites","jsxDEV","_jsxDEV","App","_s","characters","setCharacters","access","setAccess","location","navigate","URL","username","password","login","userData","logout","onSearch","id","fetch","then","response","json","data","some","character","alert","name","onClose","filter","randomCharacter","randomId","Math","floor","random","console","log","className","children","pathname","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/home/nahuel/Documentos/Repos/Henry/rick_and_morty/src/App.js"],"sourcesContent":["import {\n  useEffect,\n  useState } from 'react';\nimport {\n  Routes,\n  Route,\n  useLocation,\n  useNavigate } from 'react-router-dom';\nimport Cards from './components/Cards/Cards.jsx';\nimport NavBar from './components/NavBar/NavBar.jsx'\nimport About from './components/About/About.jsx';\nimport Detail from './components/Detail/Detail.jsx';\nimport Form from './components/Form/Form.jsx';\nimport Favorites from './components/Favorites/Favorites.jsx';\nimport './App.css';\n\nexport default function App () {\n  const [characters, setCharacters] = useState([]);\n  const [access, setAccess] = useState(false);\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const URL = 'https://rickandmortyapi.com/api/character/';\n  const username = 'nahuel@gmail.com';\n  const password = 'nahuel1234';\n\n  const login = userData => {\n    if (userData.username === username &&\n        userData.password === password) {\n      setAccess(true);\n      navigate('/home');\n    }\n  }\n\n  const logout = () => {\n    setAccess(false);\n    navigate('/');\n  }\n\n  // Prohibit the access if the user doesn't provide\n  // an username and password\n  useEffect(() => {\n    !access && navigate('/');\n    // eslint-disable-next-line\n  }, [access]);\n\n  const onSearch = id => {\n    fetch(`${URL}${id}`)\n      .then(response => response.json())\n      .then(data => {\n        if (characters.some(character => character.id === data.id))\n          alert('This character has already been added.');\n        else if(data.name)\n          setCharacters([data, ...characters]);\n        else\n          alert('There are not characters with this id.');\n      });\n  };\n\n  const onClose = id => {\n    setCharacters(characters.filter(character => character.id !== id));\n  }\n\n  const randomCharacter = () => {\n    const randomId = Math.floor((Math.random() * 826) + 1);\n    console.log(`Random character number: ${randomId}`);\n    fetch(`${URL}${randomId}`)\n      .then(response => response.json())\n      .then(data => {\n        if(data.name) setCharacters([data, ...characters])\n      })\n  }\n\n  return (\n    <div className='App'>\n      {location.pathname !== '/' && <NavBar onSearch={onSearch} logout={logout} randomCharacter={randomCharacter} />}\n      <Routes>\n        <Route\n          path='/'\n          element={<Form login={login} />}\n        />\n\n        <Route\n          path='/home'\n          element={<Cards\n                     characters={characters}\n                     onClose={onClose} />}\n        />\n\n        <Route\n          path='/about'\n          element={<About />}\n        />\n\n        <Route\n          path='/favorites'\n          element={<Favorites />}\n        />\n\n        <Route\n          path='/detail/:detailId'\n          element={<Detail />}\n        />\n      </Routes>\n   </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}