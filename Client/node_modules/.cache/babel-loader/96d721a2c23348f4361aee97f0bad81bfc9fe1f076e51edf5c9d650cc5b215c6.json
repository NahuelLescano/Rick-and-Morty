{"ast":null,"code":"var _jsxFileName = \"/home/nahuel/Documentos/Repos/Henry/rick_and_morty/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Cards from './components/Cards/Cards.jsx';\nimport NavBar from './components/NavBar/NavBar.jsx';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = 'https://rickandmortyapi.com/api/character/';\nexport default function App() {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const onSearch = character => {\n    fetch(`${URL}${character}`).then(response => response.json()).then(data => {\n      if (characters.some(character => character.id === data.id)) alert('This character has already been added.');else if (data.name) setCharacters([...characters, data]);else alert('There are not characters with this id.');\n    });\n  };\n  const onClose = id => {\n    setCharacters(characters.filter(character => character.id !== id));\n  };\n  const getRandomCharacters = () => {\n    let randomNumber = Math.floor(Math.random() * Math.abs(characters.length - 826));\n    setCharacters(characters[randomNumber]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      onSearch: onSearch,\n      randomCharacter: getRandomCharacters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Cards, {\n        characters: characters,\n        onClose: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XYOUpNAi+Jhs2dnEwppRANg7X2I=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Cards","NavBar","jsxDEV","_jsxDEV","URL","App","_s","characters","setCharacters","onSearch","character","fetch","then","response","json","data","some","id","alert","name","onClose","filter","getRandomCharacters","randomNumber","Math","floor","random","abs","length","className","children","randomCharacter","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nahuel/Documentos/Repos/Henry/rick_and_morty/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport Cards from './components/Cards/Cards.jsx';\nimport NavBar from './components/NavBar/NavBar.jsx'\nimport './App.css';\n\nconst URL = 'https://rickandmortyapi.com/api/character/';\n\nexport default function App () {\n  const [characters, setCharacters] = useState([]);\n  const onSearch = character => {\n    fetch(`${URL}${character}`)\n      .then(response => response.json())\n      .then(data => {\n        if (characters.some(character => character.id === data.id))\n          alert('This character has already been added.');\n        else if(data.name)\n          setCharacters([...characters, data]);\n        else\n          alert('There are not characters with this id.');\n      });\n  };\n\n  const onClose = id => {\n    setCharacters(characters.filter(character => character.id !== id));\n  }\n\n  const getRandomCharacters = () => {\n    let randomNumber = Math.floor(Math.random() * Math.abs(characters.length - 826))\n    setCharacters(characters[randomNumber]);\n  }\n\n  return (\n    <div className='App'>\n     <NavBar\n       onSearch={onSearch}\n       randomCharacter={getRandomCharacters}\n     />\n      <div>\n        <Cards\n          characters={characters}\n          onClose={onClose}\n        />\n      </div>\n   </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,8BAA8B;AAChD,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAG,4CAA4C;AAExD,eAAe,SAASC,GAAGA,CAAA,EAAI;EAAAC,EAAA;EAC7B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMU,QAAQ,GAAGC,SAAS,IAAI;IAC5BC,KAAK,CAAE,GAAEP,GAAI,GAAEM,SAAU,EAAC,CAAC,CACxBE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ,IAAIR,UAAU,CAACS,IAAI,CAACN,SAAS,IAAIA,SAAS,CAACO,EAAE,KAAKF,IAAI,CAACE,EAAE,CAAC,EACxDC,KAAK,CAAC,wCAAwC,CAAC,CAAC,KAC7C,IAAGH,IAAI,CAACI,IAAI,EACfX,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAEQ,IAAI,CAAC,CAAC,CAAC,KAErCG,KAAK,CAAC,wCAAwC,CAAC;IACnD,CAAC,CAAC;EACN,CAAC;EAED,MAAME,OAAO,GAAGH,EAAE,IAAI;IACpBT,aAAa,CAACD,UAAU,CAACc,MAAM,CAACX,SAAS,IAAIA,SAAS,CAACO,EAAE,KAAKA,EAAE,CAAC,CAAC;EACpE,CAAC;EAED,MAAMK,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGF,IAAI,CAACG,GAAG,CAACpB,UAAU,CAACqB,MAAM,GAAG,GAAG,CAAC,CAAC;IAChFpB,aAAa,CAACD,UAAU,CAACgB,YAAY,CAAC,CAAC;EACzC,CAAC;EAED,oBACEpB,OAAA;IAAK0B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACnB3B,OAAA,CAACF,MAAM;MACLQ,QAAQ,EAAEA,QAAS;MACnBsB,eAAe,EAAET;IAAoB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrC,eACDhC,OAAA;MAAA2B,QAAA,eACE3B,OAAA,CAACH,KAAK;QACJO,UAAU,EAAEA,UAAW;QACvBa,OAAO,EAAEA;MAAQ;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACjB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAET;AAAC7B,EAAA,CAtCuBD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}