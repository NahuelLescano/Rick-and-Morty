{"ast":null,"code":"var _jsxFileName = \"/home/nahuel/Documentos/Repos/Henry/rick_and_morty/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Routes, Route, useLocation, useNavigate, Navigate } from 'react-router-dom';\nimport Cards from './components/Cards/Cards.jsx';\nimport NavBar from './components/NavBar/NavBar.jsx';\nimport About from './components/About/About.jsx';\nimport Detail from './components/Detail/Detail.jsx';\nimport Form from './components/Form/Form.jsx';\nimport Favorites from './components/Favorites/Favorites.jsx';\nimport ErrorPage from './components/ErrorPage/ErrorPage.jsx';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [access, setAccess] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const URL = 'https://rickandmortyapi.com/api/character/';\n  const username = 'nahuel@gmail.com';\n  const password = 'nahuel1234';\n  const login = userData => {\n    if (userData.username === username && userData.password === password) {\n      setAccess(true);\n      navigate('/home');\n    }\n  };\n  const logout = () => {\n    setAccess(false);\n    navigate('/');\n  };\n\n  // Prohibit the access if the user doesn't provide\n  // an username and password\n  useEffect(() => {\n    !access && navigate('/');\n    // eslint-disable-next-line\n  }, [access]);\n  const onSearch = character => {\n    fetch(`${URL}${character}`).then(response => response.json()).then(data => {\n      if (characters.some(character => character.id === data.id)) alert('This character has already been added.');else if (data.name) setCharacters([data, ...characters]);else alert('There are not characters with this id.');\n    });\n  };\n  const onClose = id => {\n    setCharacters(characters.filter(character => character.id !== id));\n  };\n  const randomCharacter = () => {\n    const characterRandom = Math.floor(Math.random() * 826);\n    fetch(`${URL}${characterRandom}`).then(response => response.json()).then(data => {\n      if (data.name) setCharacters([data, ...characters]);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [location.pathname !== '/' && /*#__PURE__*/_jsxDEV(NavBar, {\n      onSearch: onSearch,\n      logout: logout,\n      randomCharacter: randomCharacter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Form, {\n          login: login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Cards, {\n          characters: characters,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/favorites\",\n        element: /*#__PURE__*/_jsxDEV(Favorites, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/detail/:detailId\",\n        element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/ErrorPage\",\n        element: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/ErrorPage\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/ErrorPage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GOeRqiZPW0JgElowzO17Fl6bRD4=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Routes","Route","useLocation","useNavigate","Navigate","Cards","NavBar","About","Detail","Form","Favorites","ErrorPage","jsxDEV","_jsxDEV","App","_s","characters","setCharacters","access","setAccess","location","navigate","URL","username","password","login","userData","logout","onSearch","character","fetch","then","response","json","data","some","id","alert","name","onClose","filter","randomCharacter","characterRandom","Math","floor","random","className","children","pathname","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","_c","$RefreshReg$"],"sources":["/home/nahuel/Documentos/Repos/Henry/rick_and_morty/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Routes, Route, useLocation, useNavigate, Navigate } from 'react-router-dom';\n\nimport Cards from './components/Cards/Cards.jsx';\nimport NavBar from './components/NavBar/NavBar.jsx'\nimport About from './components/About/About.jsx';\nimport Detail from './components/Detail/Detail.jsx';\nimport Form from './components/Form/Form.jsx';\nimport Favorites from './components/Favorites/Favorites.jsx';\nimport ErrorPage from './components/ErrorPage/ErrorPage.jsx';\nimport './App.css';\n\nexport default function App () {\n  const [characters, setCharacters] = useState([]);\n  const [access, setAccess] = useState(false);\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const URL = 'https://rickandmortyapi.com/api/character/';\n  const username = 'nahuel@gmail.com';\n  const password = 'nahuel1234';\n\n  const login = userData => {\n    if (userData.username === username &&\n        userData.password === password) {\n      setAccess(true);\n      navigate('/home');\n    }\n  }\n\n  const logout = () => {\n    setAccess(false);\n    navigate('/');\n  }\n\n  // Prohibit the access if the user doesn't provide\n  // an username and password\n  useEffect(() => {\n    !access && navigate('/');\n    // eslint-disable-next-line\n  }, [access]);\n\n  const onSearch = character => {\n    fetch(`${URL}${character}`)\n      .then(response => response.json())\n      .then(data => {\n        if (characters.some(character => character.id === data.id))\n          alert('This character has already been added.');\n        else if(data.name)\n          setCharacters([data, ...characters]);\n        else\n          alert('There are not characters with this id.');\n      });\n  };\n\n  const onClose = id => {\n    setCharacters(characters.filter(character => character.id !== id));\n  }\n\n  const randomCharacter = () => {\n    const characterRandom = Math.floor(Math.random() * 826);\n    fetch(`${URL}${characterRandom}`)\n      .then(response => response.json())\n      .then(data => {\n        if(data.name) setCharacters([data, ...characters])\n      })\n  }\n\n  return (\n    <div className='App'>\n      {location.pathname !== '/' && <NavBar onSearch={onSearch} logout={logout} randomCharacter={randomCharacter} />}\n      <Routes>\n        <Route\n          path='/'\n          element={<Form login={login} />}\n        />\n\n        <Route\n          path='/home'\n          element={<Cards\n                     characters={characters}\n                     onClose={onClose} />}\n        />\n\n        <Route\n          path='/about'\n          element={<About />}\n        />\n\n        <Route\n          path='/favorites'\n          element={<Favorites />}\n        />\n\n        <Route\n          path='/detail/:detailId'\n          element={<Detail />}\n        />\n\n        {/*https://stackabuse.com/redirects-in-react-router/*/}\n        <Route\n          path='/ErrorPage'\n          element={<ErrorPage />}\n        />\n\n        <Route\n          path='/ErrorPage'\n          element={<Navigate to='/ErrorPage'/>}\n        />\n      </Routes>\n   </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}